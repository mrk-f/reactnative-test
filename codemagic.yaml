workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
                PACKAGE_NAME: "com.reactnativetest" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - mark@nevercode.io
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: true   # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
              track: alpha

    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                # Env vars for automatic iOS code signing
                # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                XCODE_WORKSPACE: "ReactNativeTest.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "ReactNativeTest" # <-- Put the name of your Xcode scheme here
                APPLE_ID: Encrypted(Z0FBQUFBQmdpOGs2T1ZxYm9LMVRxVlhFeWZkN2JzajZLZkFaNm9IbTAzOHljMHM5YVBzRjdWVDU1LTlheUs4UEROeHA0dTFPN2t0b1VFWVZVdS1uUkdZbzVnYXl0WGtNbm5peHBDSmJsYkQxWjhzWnVzYk5yODg9) # <-- Put you encrypted Apple ID here
                APP_SPECIFIC_PASSWORD: Encrypted(Z0FBQUFBQmdpOHBrYUVIaXlvSGtNMkZQRDZmbzFSQ3dtdVc3d3Qwc1RZQVhSdGFpa1lycDZFbVFBRDJwaEN0MHhwZzNEc25TQU9RM3ZhTUNENTlEZ0JRR2FuR3Y3NnpMdUVqQkNNbnktd3RvZWdEVXE2ejh4YlU9) # <-- Put your encrypted App Specific Password here. For more information visit: https://support.apple.com/en-us/HT204397
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmdqQ0w3NUhWemVfcksySXYxdTctTWx1SzhGdUh1LW01ajNWTkdXU3RPbDlCbjlqcXNISDd5NXFsTlhITEJhN0hqdUMxNjBEU3Nma2xNWXU2WlhhSnQyV0JMX2FfN0JxV2VmaDF2ekNmei1vNzNJS2VNMzJFMERQVDRsZzNyTy1hZ3FSOTQ=) # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmdqQ0xBYnphc1BPRTAzVlhWdGRrTHRmNHhZZHRsU3dEUnJ6QjZWUEY1a0R6QW9LRkdzSE9sbVE5aEVRSzRnSzloQ291R0FlTEU1QnFxX2lMUHVSOEdocV9Tbnc9PQ==) # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmdqQ05MNENvT20wcGVfWVB2Y2RfZzJZTUswZkx0NWZaUXpzN2txNTJtSFR2djdNSWF0ZUdIRVdCcC10LW9mRnF2UzN3ZjNvTmdYN1JLa25WOXc3MXhOWWNqM2w2YjRkNzdGdDZkeE1YY0VVSXgwMlhlMkw0YlBib3dycEozR0N3cTdhUy11cnRSZTI5eDBqajZKdUlWMHZFdTYxN1E2WTRzVWNLb0l1S215dE1OZUk1VVI4ZVFXY1VZTmlYUzRhU01QWTFfN29UalVWNEZoQVdGd1JJQV9HVDVFQ2ZLUXZ2ajRqTXdFeWcyMjJwMW1xVjVCdm0tSzY2WHFSZ05HWTVMT3hDUWVkZy1TNjFpakZZS0M1WWh6SGpCekVaTVE4RGJDckdaRmItWmRVYWJ1Uk9hZS1LenJBREQ2akx1djIzOU5Kc25ScDhQSXN2cDZlMktwaW5UMVVMMlNqY1U5a0o2cUFXVm1jSUJuYmFJcmVyeDkwRmZGOUJwRF9lS0tUNUJfT2NpUzRoRUZiN2I4cWdjX3pmQmpkYTdEdzVpLXhyX181bEJqTkhKeEN0NWdrRT0=) # <-- Put your App Store Connect Private Key here
                # May need to change value
                CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmdqQ1FSeHpBMGdySjlRUXlBLXlVRUZSOXZ5dGh2LUUta0h0OUtKeW5pWVJJYmxwa3dOTlhOZzh3ajIzanhjdGJDSThlUGJkTHR0MTJ6WXN1SGh0YW5yaWZZWUo3clRUcUpXekVnT2YyM3lIUnN3LWxhWkVTVVZjeHMtWWVSbXc2d3NSMUdvQUxBRjhxQ3g1ZEl4dkk5dUU5UzM2Y0tFUFA5SGM1RElJZXp0OGhLSTd1cU5jTlZ4R3A4ekpUS3BzcTJha0F2VjBmOWtudEdjNnh0a3M2ZzZwV2w1VWJUeElINkRWa3FIZzd3T3pRcXVjNlJXcXktSVFwSmJYTFhrRUxBSDRUWjhLMDV3b3llNWxYWWZzLTdoejRDeFdPRU9WSTdqdUMxbWlkN3pWdkpVTTZGaGRjVDJnVTVYNE4zMXdPOVA1N1RadlJRamRLX0daUzQ0NlB6a09yMk9Hbm1TV1VsRHFTWnlFSlZObDktQlp5aGxSa3VoT1F3U0JreDNvVU5yMlRPSldWeFhBSDdZSk5nNVo0enFSWkdwNXhyeV9VVWhCekdjV1FtdlJsdUJ1MkFBRmtUSGgxTTdVd213elE5LV9XVjJPMUZkTFdoVlhhSnFsbFl2Z3Z0WmNQbXNCVjZVRGtBdFNLdF9XZ0ZnTTVMYks2NDBPaGJRd2dPT0NDVi01elRLdE5nczRScXNESHE3RWJXMC1mR2UwRktSRUo5NDRtakJxQ0hNZ09uQS03Qm5jQW9yb0x4Mk90TmtFczQzRFFhck9HUV8yMXdiTzRMMjc2ZGpiZWs0Qnk0Y2tFb2JHQlZVQUdpa3E2ZzhiTDRrQzlqc0dDTlZ6RGtkYnBreE94bWJMNFFBbjBmSDJWTjZtMnpRekxPb3Q3cXB6S285LUZVZmlJVENZNHYzRGhjQm9weW91N3ZHQVFKTTVlMWRJU0QtcDhuZi0xekVPWkk3dUVENnpwNTRPWmR0bVdBMnpqaF92RjR6dGtDNm9URmpZazA1SHk1Nlh4d1BUMnhCbnhKcndZX2pwcTNLS3N1Zm9fd0l1M1pZLWh3ZnpidzZ1ektvLXVxOGYtVTlYbXVLRmtZOGo5VTlxblFVYUgxNWs3ZHhOenFuZWR1UGJNQ1ZrSDBtUWdIc1RCQXI4akNyWlBxWWtMNGJ5OG5HUFVGN0pLLXhWNTZzZlZfNk1ITU10bksweVJlTkhPY1VhenVaZnVnYjNMby0yTE1CaTg0TUttemZMSjg1V0NyU2VPVTFBQWN1eTBvcVpQQlFuM2p3cUtSaTZjQ1pkZHVheFBJTERFNVRIX3hmT3hza2JnYUo4S3NKOE1NTnpxS2RBcFdFamVBRHZNY05uMUl2SXVrbzVxb3JwZWFHbHVES3FZTW9EVDQwVFVJeFFGRzV5S1g5TlIyWk9mbmFJcklKRU1wVzNXSktKenQxUmczZWlySjNLblQ1WWxtWjdTem9pcEdyLVMzWVQ4MEdfOEpBMWluM1BFcVNGZGhCa080c3VvTjRCWG90UnFXdzRSTFJQQUpvbG53MTlaN000Q3hfQUg4QkxXZW9kaWZ5cnR2am5BZmpUc2dwcGNINzhkWlhhZXlhX19seGpGd0V3Zm1TdU9FX3gwM184ak1pck5KaUNKQm1GRzdnRXA1NXJvbkV6YWZ0UEYzM2JZMno2eVZlek42RDc2R0J1a2M3cDlCbGFraG1KZE1YdzdSWDZCUjNYS3d1YUVKb3V2TVY3UWVWZnBidVotbjZEdVB6blZPVzlDU2hBUWdROEdld3F4YUpqM2ZZYXJFc3dvakFwM3VHQ1JKNHMxNWVXNGJqck5JcmdyMUlXY0xscHdFUHp4dHd1c3lrNll5N0tWc3NTY1ZLTzBzVkxCUU9zZU8xUFYtaXFWcktGb1M1NG5FVHdRdGw5ZmFPOGJfM2VCU3FnaUFGMzItdm1EcnVlMDdwVHg0S2llMG9uR0lEdnZXdlViN0JPX0k4Tmw0ckg3bEVUMlQzcFplWHd3bDJvb1lybVE2YXIxcUVzRGFGQVVJaGtkdTY3ZDVGWFVCTTFfX05icFMxU2VISWk0a0oxOHBTT2FveTJ4cjhtYzJjcDV5cHEyemRrX1BsUF9XTGxTcXVZWkZCVGdvb2xNN1d6bTNjaDMtVGw4dGZZR09yT3RBRjZxQnk5YU1RSndaZDF0Y2owWnljaFNCSjJmdGVZTndYSW1QWHZsNVA3cTU5TktCZzE3U3pkdUxSc09Fdzl3SkdqSjJXQS1KOHRxTzNWd0VUYWJpT1ZxUWFDUzg2UkZ1cGExM0w3cWljdm9hMl8xWG0tWWluNjFlbVIycjRNaWFJTXVTOVVxc1Z3TTZmTGZGcG5pOFpqMnQ0SnNURjQ3WjJPaWpJTXYzQU5VU0o1R3JDZFZIenF5MWFsVXRoOHBZMnRiY2lRenpMVjVDS1VwLTQ4U2lLQ19BWFN2UWlMR194Zk1nUng1ZHBxZ0Y1NzlzNlFXaG4xRFdwUkY4bTcxMHgzQXNlUXJQZF9SY1RpNUlFbXdwdGhvVUhxMi1JbHJzTmRMclFHT09sY0dUMzVqQ1IyZzduNm9iNW9ZakZmTU91d0ZMQkJPNnoyMjlqWC0teUNzZjZzNFBmVzF0am14cjMtR21NU2NCUkdFaGgtS2FQZFVScUtqM2FsVW1hcE5ZbWI4cUpfVG8wOXlfZzJTMzBfYmg0WS1Vc3NTXzR4ZU81b0pvY0tOUHQ0bHZhWnNZLTNfRUUwYWVyN0tEdXhzYzlmRE5QWmN3c2hJN0ZXMTJJV0h4NUxoSVBYRDlTcW5USllEMkZHMTdaakQ0Z0NYUXNSS2VPTC1aWUh3TXZQaERxZlFmRzh2dVRROGF5aGNRUmtiQW1vd0xfVWlOcGZ6ZzJBa1AtQXpqSFh5aEhVOXVOQ2tFTy16eGFFQ1Uxcl84M2NuNTh2djdhQ2JWX2lUUlFac0R1Y2NXRi16bml2a01pY1RRX3JHNjFOZlNMellaVm9fbjVGQ1FHVnUwbzUzeTBITHRORWdJYURYX0pYOW9GRDkzMTE3dTIwZTJuS1F4ZklPbGZ6WEZ1TGJo)
                 # <-- Put your Certificate Private key here 
                BUNDLE_ID: "com.mark.reactnativetest" # <-- Put your Bundle Id here e.g com.domain.myapp
                APP_STORE_APP_ID: 1565509792 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
            node: latest
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: 
              script: |
                # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
                app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                # agvtool new-version -all $(($BUILD_NUMBER + 1))
                agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
          email:
            recipients:
              - mark@nevercode.io
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: true    # To not receive a notification when a build fails
          app_store_connect:                 
              apple_id: $APPLE_ID
              password: $APP_SPECIFIC_PASSWORD