workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
                PACKAGE_NAME: "com.reactnativetest" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - mark@nevercode.io
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: true   # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
              track: alpha

    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                # Env vars for automatic iOS code signing
                # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                XCODE_WORKSPACE: "ReactNativeTest.xcworkspace" # <-- Put the name of your Xcode workspace here
                XCODE_SCHEME: "ReactNativeTest" # <-- Put the name of your Xcode scheme here
                APPLE_ID: Encrypted(Z0FBQUFBQmdpOGs2T1ZxYm9LMVRxVlhFeWZkN2JzajZLZkFaNm9IbTAzOHljMHM5YVBzRjdWVDU1LTlheUs4UEROeHA0dTFPN2t0b1VFWVZVdS1uUkdZbzVnYXl0WGtNbm5peHBDSmJsYkQxWjhzWnVzYk5yODg9) # <-- Put you encrypted Apple ID here
                APP_SPECIFIC_PASSWORD: Encrypted(Z0FBQUFBQmdpOHBrYUVIaXlvSGtNMkZQRDZmbzFSQ3dtdVc3d3Qwc1RZQVhSdGFpa1lycDZFbVFBRDJwaEN0MHhwZzNEc25TQU9RM3ZhTUNENTlEZ0JRR2FuR3Y3NnpMdUVqQkNNbnktd3RvZWdEVXE2ejh4YlU9) # <-- Put your encrypted App Specific Password here. For more information visit: https://support.apple.com/en-us/HT204397
                # https://appstoreconnect.apple.com/access/api
                APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmdKVWdUYWZUZmxIa2kxUHYwdGlsVjNRbVk3WDZvZHhjZGxVU3YwQVZ4TjlQSTA0cXY1R0JCN1JRaGFBYTFPT2FRX09zdzdCQXRTUngxbXRSLUtPODB3ZU84MkN4Y2w4OXRxZFdEdktJMVBQbGpUbkdkZ21hUDJ6VnRGNFRmNGwyU1VCV0U=) # <-- Put your App Store Connect Issuer Id here
                APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmdKVWZxYWgxckxzTGQ1SHpwN3c1Z3JkZUVvWWNzWjlzZTh1MVhWMGxrekFXYXl6UjZrVXozdzhBODZpdUZma2daNmhuOTZfX1dlZ3JvSTNvR1NkSElHZUxzUXc9PQ==) # <-- Put your App Store Connect Key Identifier here
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmdKVXhVeXNUSDlvZkNDaVBaal84MjBGa1pJbHNWVlNCVk1FSWxsZV9FSlk5cm5fRUpacnJ5ZHVYZnhjS1FiTUVqdVpSWVMxd3Byem5TeG5aNk95bjdmVmptdlV5WlV2TGVISW1YRzBrcF9CcTlXVFdlZ2hfQmRGekpzMEdJVDkySkRobFBZY3dwc0NWcERFdk9KSE5WbGd1Z2VKZHJnb2trT05oalBJT2xRaWtILVl2aXY4NzBPVFlHWGJEOEFxUnI5SF81VHgtM2kyd0thZ0w2WHcxVVczd05fVWtwWjR3dkhWTzZObElfQzFOV25hNEdkRUt6dVp1QThPVl9YZVpvNkd4QWlWN1UyMVpUZzU5M0NJSVBybzV3X3FBdXFmSjRDaTRBQ2JzZzg5NEphVDZBcHUxbnN0bE51c0ozYkdMeFc5ZTA0OXNybXNEQXVTeVFqVUp0UlJLa0xyX1ctWU1pa1RHaE1sSGVVOGZPYmFzQ1FyWFMzOVYzd0JWSV9TQkFnZmJxZzdsZE40U1lESmdBeXJUQTM0Sm1nVzBCSmFLZEdkM0lrZ2JHbzhUaUxybz0=) # <-- Put your App Store Connect Private Key here
                # May need to change value
                CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmdKVXJabWtfYjZ6R05rakU1UkZzejZDaTBxTWNpd0hWQ0UyajlHcy0wekxfaHVud2w4VFg3ZXdDU0UxZjE4TU1TeUdvcU1ZQWJjNVBSNFB1MlVscjdIWHQzSVNQVHU4VkRSLVZ1bThRcnZXZlprZFA5UXgxdm92TlFkNHJ3N3pVQVRBSkw5MVpxQW5SS2dsNjJ5RUt3REQtSGFVSXlEdTFoRkpsWWtXdGtNUnhjSi1laERlb2RmaWpQVVIwYVEwYldlcXZZbFBHSUJsWnVKdHU4SVh5VU1xQV9SYmhJX0RWQ2dQVno0eWxkQjFScnZFVWRHYlA4MjAzMEZoMEhjTkMyOWxTVEtNNktvMUNTek5fR2dtTmtmWTZjN3plN2dvRURzTEtLTHBwbmk5cGRQbmJPNWtIdVpuYll3Z3dVZzAtdnpzd0ltU0xCSHBNclpidFFyeGwxbnB6UndsVllDUFZjQzZ6eHpEd2ZqOWY3dzJjNjFfWTBFZEtKNkVuSkxCclhaQWN3Yk43UUpmUUVFX0xpcnR4QkJVLTBWMWhLVVhvNUJFVjlPMWZ4QW5WQ0JaemdqRlpKN1FmQlhBaVF4Um1Kdm1MMGRsRkN0M1JjOFo3eVdINjdlWnd2Mk9VTGdHZzNrZ0pscDdKYjhaY2VqQXBPQ2duOHNzZHIyUXY3ZWtUeXZYaE5tRzZ5dGR2MlQ2bzFnMUVFd1lqVmhtUnlOT0VuMGRnOS1oemNyMm12U1ViY1RjSUVPNWpubzB2RnJCLTJqUTJ3Z3NOdkpUN08xZl9HQjkzSDV1bTdLMGFqOWhYUmJJY2ZHZGhBUTZETjNuekkxbkpKNy1ReHpFVGdiMzhoT2wtN2NPS250dUxTWXJUMWVlajdJMDAxc01RZFFueXdoWWhNUVZpdXM0U2JxMkFnY0NiU05xeDBQNEYyczdZRVRYQU15VmV0WGtXZEVwTTZ5X0dmVUNISl9ULW5JbUU0bTkwZzNnTU9MRTQ4NUUyeDhEZEcwRzJ1YUxRVkhWVlhoTmdYZFlCSGM4VVhXQW5aMHQ3SXpVbjd4NGNrWDR5Rnp1THduazhoNTJFQWV0ZkYzdE85Ynl2RmNsdjlVTTdpT19lSlB1Mk9TWWM5cXEyYk91alNwQzh5c2ZkU3EzU0trd0VacXlJYWtYZHlPNFFLWk90aUFQM0dPbG95ZVVVUzVucTdINnJrMUs5ZTNHOUNJNWZ4MThPVU5MampKeS1hYXpEYm1DOHpjS0RoWWl4NlNSaC1EaVZVTWc3UG8yaHZSUno4dE4tbFJoS0I4b054ckxGa29NbW9LdVBHRGlyZXctY3lESDJwXzVxVk5famdLSTRLQ0hqNGkyYnk1TG84Smlxenl5bDhnUE5xeWxyNWxyOHAzc0VSMTFIaklYTklhNUVxblFzVmk3SDluYXNmcWhkSUkxTVV0b2tiUlplbnlsSTQxdlYwQlo4QXE4ZFdWVnFKZ2E1UndIOFdGY1RrclotcXlJazA2WkxCcEpHU3ZyS1FhN0FNWmpEZ0J2RXhld3BEbUtFU0NVYlJURFFwb1cwcjhESlYxb0dTTFNGT0RfZXZfVHp6cmxhWUM4bUVxYjVuSHN2U3VndHVkNmJDVExSSk4zc2JoWlEtMWNmc3laUHB3SUliOEZ3VFhNdkJsbTBjdHU1ZGlrLWdXdjMxZF9qSml0WjBlSlF3UEF5emJKejdMc3JkMnJualFlNHRCQWJJTlo5R0xQcTA3V0kzdEJldUhfSkREOVRIYnlxcTRqdVIxN0xSY3VDRTE2MlNBb3BnaEVhX1V3S1VKS2lfdExYTjhjcU1aczlMbXdDRDl0WllFb1kzZG1lMHpqUlJwc1E1NGI4VGUtTzRrUGItblNWN2h1eWRWZVNWWHFfQm9BdTBRSm1DVXhlRVRGYVkwMWY5Snp4bV9tVmYyMGlmM09GYm1Tc3FCSTVEOXVoQnVHNFhHVVhlVzhnZUdjU0o1MHpLM2lVTmN5N05XVkRGR2tCWUR2MEZJbXQwQ3NSeGFaTXQwWTVGZFNvaE1SU2ZwMkQyRktOSTI4QWRjc3lXQndHWUhLZEVERGEySkNwTWx1bnlEa3gyUi1pVktLTWdNQmR0Y0V0LThydGJPZDNfVzB1OFFvRmxvVGZ6dFdsVDhvOHNFQ3dtZlVsbUNXSlM2Nmp1VndoM3lJR0dGZ2xnOVNUWHFIazNtbmZ0WC1mUm5kNGpDSmc4SnFDZTRLdGhaZDNTQUxpa1YxRWh0LXFEX2sxYllCUnU3eFFSdEpiZjlRUl9hSG14ak5pcS1HX0JlVUprcy1jQm5IaUpTTGx2cy10RERQY2FEVzlXbU10bFZEanVER29vWmJJZFBFTFQ5SlZDUTZsY3RFdGlSOFVxbDJrcENDcGtRd1BmLW1rSllrZmZpNjcwclJxQ1hnSWdYUVBPRHBNQTBhMnF3Um1HSF81OGpXQlBHZl9Qei11ZVJlcHFYYlYySV9MZ1BnUUJLN1N3eUhiSnlVNkRuRXVZQlM4NkZ0SzR0bmVTeUc0RTl5R0RRSS1XSUt2WTd1dm0taDZxdzdoR1lTQ0Rka0VJbml6Q0ktbXRKOUd6VE9vX0dMRkQzaGVtOHM4SUpWdkRKZWU5MDA3ZDRLR0lpVENOaVJ2QmVIVGVaZGNwR0Q4YjNVZEx0Z3ZRdWtGc0pxM3EwSld2SUVQZ1JNa0w2UVNUb2ZOUXBwR1YydVNORFRrMG5VQnhPLThSMThsWHNERjhOaXFFMXJwNTBUZnNYa1JLNmJkZnd1VTUzLVljRUtKM2VjbEU5OXE1QUdkdlRXWTlzaUpTZm0yYjNtaWJJcEFhMmtaUVR2UzRtVkpZYnFHV05NZXVFQ0ZubU9fOEJTckFwaXpuZFRpVFZ5clVIVjc1bFNaRzA4Vmg4YUF1LV9DWXlVS1oxOENiZzAxcnpMeEJ4TDdkVE0tUDFTUGRPbXhud0hMMDVTbmt2WmVNUWJaX0tXYndjV050c2U2R0VEQzFFUWxIdnlZdHUwbXVid0pFUVdvWWVxdHdWZ3dTbWZDaUNuZHVGNE1WVXYtQUxtOGFXTmJp)
                 # <-- Put your Certificate Private key here 
                BUNDLE_ID: "com.mark.reactnativetest" # <-- Put your Bundle Id here e.g com.domain.myapp
                APP_STORE_APP_ID: 1565509792 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
            node: latest
            xcode: latest
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            - name: 
              script: |
                # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
                app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE
            - name: Use system default keychain
              script: |
                keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                # agvtool new-version -all $(($BUILD_NUMBER + 1))
                agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME" 
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
          email:
            recipients:
              - mark@nevercode.io
            notify:
              success: true     # To not receive a notification when a build succeeds
              failure: true    # To not receive a notification when a build fails
          app_store_connect:                 
              apple_id: $APPLE_ID
              password: $APP_SPECIFIC_PASSWORD